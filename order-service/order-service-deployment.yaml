# Namespace (ensure this exists, skip if already created)
apiVersion: v1
kind: Namespace
metadata: 
  name: iit-dev

---

# Deployment for Order Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: iit-dev  # ✅ Scoped to namespace for isolation
  labels:
    app: order-service
spec:
  replicas: 1  # ✅ Cost-efficient for coursework/free-tier
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      imagePullSecrets:
        - name: dockerhub-secret  # ✅ Needed if pulling from private Docker Hub
      containers:
        - name: order-service
          image: nuviii/order-service:latest
          imagePullPolicy: Always  # ✅ Always pull latest for cloud deploys
          ports:
            - containerPort: 8086
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: mysql+pymysql://user:password@orderdb:3308/orders
              # ⚠️ RECOMMEND using a secret for production (see below)
          command: ["sh", "-c"]
          args:
            - |
              echo "⏳ Waiting for orderdb on port 3308..."
              for i in $(seq 1 10); do
                nc -z orderdb 3308 && break
                echo "Waiting for MySQL to be ready... ($i)"
                sleep 3
              done
              echo "✅ Starting Order Service"
              uvicorn app.main:app --host 0.0.0.0 --port 8086
          resources:   # ✅ Cloud cost control
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
      restartPolicy: Always

---

# Service for Order Service
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: iit-dev  # ✅ Same namespace as Deployment
  labels:
    app: order-service
spec:
  type: ClusterIP  # ✅ Internal access, exposed via Ingress
  selector:
    app: order-service
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086

---

# Ingress for Order Service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: order-ingress
  namespace: iit-dev  # ✅ Namespace-scoped
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /api/order(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: order-service
                port:
                  number: 8086
